{"ast":null,"code":"import _defineProperty from \"/Users/danny484349/Desktop/react-redux-antd-boilerplate/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/danny484349/Desktop/react-redux-antd-boilerplate/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/danny484349/Desktop/react-redux-antd-boilerplate/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danny484349/Desktop/react-redux-antd-boilerplate/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danny484349/Desktop/react-redux-antd-boilerplate/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danny484349/Desktop/react-redux-antd-boilerplate/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danny484349/Desktop/react-redux-antd-boilerplate/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danny484349/Desktop/react-redux-antd-boilerplate/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danny484349/Desktop/react-redux-antd-boilerplate/src/components/CreateBlockchain.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Dropdown, Icon } from 'antd';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nvar axiosConfigGet = {\n  method: \"get\"\n};\nvar axiosConfigPost = {\n  method: \"post\",\n  url: \"http://127.0.0.1:5000/post\"\n};\n\nvar CreateBlockchain =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateBlockchain, _Component);\n\n  function CreateBlockchain(props) {\n    var _this;\n\n    _classCallCheck(this, CreateBlockchain);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateBlockchain).call(this, props));\n\n    _this.handleSubmit = function () {\n      axios(_objectSpread({}, axiosConfigGet, {\n        url: \"http://127.0.0.1:5000/store/\".concat(_this.state.entry)\n      })).then(function (res) {\n        console.log(\"response from the server is \".concat(res));\n\n        _this.setState(function (prevState) {\n          return _objectSpread({}, prevState, {\n            store: res.data.name\n          });\n        });\n      }).catch(function (err) {\n        console.log(\"error connecting the server is \".concat(err));\n      });\n    };\n\n    _this.state = {\n      account_addr: '',\n      cointype: '',\n      amount: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CreateBlockchain, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.id, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        disabled: this.props.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \" Create Blockchain \"), React.createElement(\"h3\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"\\u5275\\u9020\\u5340\\u584A\\u93C8\\uFF01\"), React.createElement(\"form\", {\n        className: \"needs-validation\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" Account *\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"account_addr\",\n        placeholder: \"Address of the sender\",\n        value: this.state.account_addr,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"tags\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Cointype *\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"cointype\",\n        placeholder: \"Type of the coin\",\n        value: this.state.cointype,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"tags\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Total amount *\"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: \"amount\",\n        placeholder: \"Amount of coin to transfer\",\n        value: this.state.amount,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"submit\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"data from server\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.store))))));\n    }\n  }]);\n\n  return CreateBlockchain;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.reducerState\n  };\n};\n\nexport default connect(mapStateToProps)(CreateBlockchain);","map":{"version":3,"sources":["/Users/danny484349/Desktop/react-redux-antd-boilerplate/src/components/CreateBlockchain.js"],"names":["React","Component","connect","Link","Menu","Dropdown","Icon","ReactDOM","axios","axiosConfigGet","method","axiosConfigPost","url","CreateBlockchain","props","handleSubmit","state","entry","then","res","console","log","setState","prevState","store","data","name","catch","err","account_addr","cointype","amount","handleChange","bind","event","target","id","value","loading","mapStateToProps","reducerState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Dropdown, Icon} from 'antd';\nimport ReactDOM from 'react-dom'\nimport axios from 'axios'\n\nconst axiosConfigGet = {\n  method: \"get\",\n}\nconst axiosConfigPost = {\n  method: \"post\",\n  url: \"http://127.0.0.1:5000/post\"\n}\n\nclass CreateBlockchain extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       account_addr: '',\n       cointype: '',\n       amount: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value,\n    })\n  }\n\n  handleSubmit = () => {\n    axios({...axiosConfigGet, url: `http://127.0.0.1:5000/store/${this.state.entry}`})\n       .then((res)=>{\n          console.log(`response from the server is ${res}`)\n          this.setState((prevState)=>({...prevState, store: res.data.name}))\n       })\n       .catch((err)=>{\n          console.log(`error connecting the server is ${err}`)\n       })\n  }\n\n  render() {\n   return (\n      <div className=\"container\">\n      <fieldset disabled={this.props.loading}>\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center mt-4\"> Create Blockchain </h1>            \n              <h3 className=\"lead text-center\">\n                創造區塊鏈！\n              </h3>            \n            <form\n              className=\"needs-validation\"\n              onSubmit={this.handleSubmit}\n            >\n              <div className=\"form-group\">\n                <label htmlFor=\"title\"> Account *</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"account_addr\"\n                  placeholder=\"Address of the sender\"\n                  value={this.state.account_addr}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"tags\">Cointype *</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"cointype\"\n                  placeholder=\"Type of the coin\"\n                  value={this.state.cointype}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"tags\">Total amount *</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  id=\"amount\"\n                  placeholder=\"Amount of coin to transfer\"\n                  value={this.state.amount}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n              <button onClick={this.handleSubmit}>submit</button>\n              <h4>data from server</h4>\n              <p>{this.state.store}</p>\n            </form>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  )\n}\n}\n\nconst mapStateToProps = state => ({\n   state: state.reducerState\n });\n \n export default connect(\n   mapStateToProps,\n )(CreateBlockchain);"]},"metadata":{},"sourceType":"module"}